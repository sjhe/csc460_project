Archive member included to satisfy reference by file (symbol)

/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o (exit)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_clear_bss.o)
                              os.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

CurrentSp           0x2               os.o
KernelSp            0x2               os.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000100000 xr
data             0x0000000000800200 0x000000000000fe00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o
LOAD os.o
START GROUP
LOAD /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a
LOAD /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/libm.a
LOAD /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/libc.a
LOAD /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/libatmega2560.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x4bc
 *(.vectors)
 .vectors       0x0000000000000000       0xe4 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000000000000e4                . = ALIGN (0x2)
                0x00000000000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000e4        0xc linker stubs
 *(.trampolines*)
                0x00000000000000f0                __trampolines_end = .
 *(.progmem*)
                0x00000000000000f0                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000f0                __ctors_start = .
 *(.ctors)
                0x00000000000000f0                __ctors_end = .
                0x00000000000000f0                __dtors_start = .
 *(.dtors)
                0x00000000000000f0                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000f0        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o
                0x00000000000000f0                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000f0       0x10 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000100       0x10 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_clear_bss.o)
                0x0000000000000100                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000110        0x8 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o
 *(.init9)
 *(.text)
 .text          0x0000000000000118        0x4 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o
                0x0000000000000118                __vector_42
                0x0000000000000118                __vector_22
                0x0000000000000118                __vector_28
                0x0000000000000118                __vector_1
                0x0000000000000118                __vector_34
                0x0000000000000118                __vector_24
                0x0000000000000118                __vector_12
                0x0000000000000118                __vector_55
                0x0000000000000118                __vector_46
                0x0000000000000118                __bad_interrupt
                0x0000000000000118                __vector_6
                0x0000000000000118                __vector_31
                0x0000000000000118                __vector_35
                0x0000000000000118                __vector_39
                0x0000000000000118                __vector_3
                0x0000000000000118                __vector_23
                0x0000000000000118                __vector_30
                0x0000000000000118                __vector_45
                0x0000000000000118                __vector_25
                0x0000000000000118                __vector_11
                0x0000000000000118                __vector_54
                0x0000000000000118                __vector_13
                0x0000000000000118                __vector_17
                0x0000000000000118                __vector_19
                0x0000000000000118                __vector_56
                0x0000000000000118                __vector_7
                0x0000000000000118                __vector_49
                0x0000000000000118                __vector_41
                0x0000000000000118                __vector_43
                0x0000000000000118                __vector_27
                0x0000000000000118                __vector_5
                0x0000000000000118                __vector_33
                0x0000000000000118                __vector_47
                0x0000000000000118                __vector_52
                0x0000000000000118                __vector_37
                0x0000000000000118                __vector_4
                0x0000000000000118                __vector_44
                0x0000000000000118                __vector_51
                0x0000000000000118                __vector_9
                0x0000000000000118                __vector_2
                0x0000000000000118                __vector_21
                0x0000000000000118                __vector_15
                0x0000000000000118                __vector_36
                0x0000000000000118                __vector_29
                0x0000000000000118                __vector_40
                0x0000000000000118                __vector_8
                0x0000000000000118                __vector_26
                0x0000000000000118                __vector_48
                0x0000000000000118                __vector_14
                0x0000000000000118                __vector_53
                0x0000000000000118                __vector_10
                0x0000000000000118                __vector_50
                0x0000000000000118                __vector_16
                0x0000000000000118                __vector_18
                0x0000000000000118                __vector_20
                0x0000000000000118                __vector_38
 .text          0x000000000000011c      0x2f0 os.o
                0x000000000000011c                Ping
                0x000000000000012a                Pong
                0x0000000000000138                Task_Terminate
                0x0000000000000160                setup
                0x00000000000001a2                Kernel_Create_Task_At
                0x0000000000000258                OS_Init
                0x000000000000029c                OS_Start
                0x0000000000000352                Task_Create
                0x0000000000000388                Task_Next
                0x00000000000003b0                __vector_32
 .text          0x000000000000040c        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
 .text          0x000000000000040c        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_clear_bss.o)
                0x000000000000040c                . = ALIGN (0x2)
 *(.text.*)
 .text.unlikely
                0x000000000000040c       0x90 os.o
 .text.startup  0x000000000000049c       0x1c os.o
                0x000000000000049c                main
 .text.libgcc.mul
                0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_clear_bss.o)
                0x00000000000004b8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000004b8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
                0x00000000000004b8                exit
                0x00000000000004b8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000004b8        0x4 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000004bc                _etext = .

.data           0x0000000000800200        0x0 load address 0x00000000000004bc
                0x0000000000800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o
 .data          0x0000000000800200        0x0 os.o
 .data          0x0000000000800200        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
 .data          0x0000000000800200        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800200                . = ALIGN (0x2)
                0x0000000000800200                _edata = .
                0x0000000000800200                PROVIDE (__data_end, .)

.bss            0x0000000000800200      0x42c
                0x0000000000800200                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800200        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o
 .bss           0x0000000000800200      0x428 os.o
 .bss           0x0000000000800628        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
 .bss           0x0000000000800628        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800628        0x4 os.o
                0x0000000000800628                CurrentSp
                0x000000000080062a                KernelSp
                0x000000000080062c                PROVIDE (__bss_end, .)
                0x00000000000004bc                __data_load_start = LOADADDR (.data)
                0x00000000000004bc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080062c        0x0
                0x000000000080062c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080062c                PROVIDE (__noinit_end, .)
                0x000000000080062c                _end = .
                0x000000000080062c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0xe1c
 *(.stab)
 .stab          0x0000000000000000      0xcfc os.o
 .stab          0x0000000000000cfc       0x6c /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000000d68       0xb4 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr6/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000     0x12e1
 *(.stabstr)
 .stabstr       0x0000000000000000     0x12e1 os.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 os.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xbbc
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0xbbc /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o

.debug_abbrev   0x0000000000000000      0xb1a
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0xb1a /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x3e6
 *(.debug_str)
 .debug_str     0x0000000000000000      0x3e6 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr6/crtatmega2560.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(os.elf elf32-avr)
LOAD linker stubs
